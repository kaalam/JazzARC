{"experiment_path": "./experiments/2020-05-27_145042", "solved": ["1190e5a7.json", "ed36ccf7.json", "67e8384a.json", "9dfd6313.json", "310f3251.json", "ce039d91.json", "0bb8deee.json", "3906de3d.json", "7468f01a.json", "62c24649.json", "1f85a75f.json", "c59eb873.json", "fc754716.json", "9ddd00f0.json", "ad7e01d0.json", "2072aba6.json", "f76d97a5.json", "46f33fce.json", "bbb1b8b6.json", "195ba7dc.json", "6d0aefbc.json", "d406998b.json", "8e2edd66.json", "8be77c9e.json", "00576224.json", "1cf80156.json", "f25ffba3.json", "c3e719e8.json", "1b2d62fb.json", "a87f7484.json", "b1948b0a.json", "5614dbcf.json", "34b99a2b.json", "fafffa47.json", "7953d61e.json", "ccd554ac.json", "48f8583b.json", "e3497940.json", "b4a43f3b.json", "9f236235.json", "6150a2bd.json", "d56f2372.json", "7b7f7511.json", "ce4f8723.json", "8d5021e8.json", "d511f180.json", "007bbfb7.json", "be03b35f.json", "c48954c1.json", "0520fde7.json", "0c9aba6e.json", "e98196ab.json", "25ff71a9.json", "0b148d64.json", "d23f8c26.json", "60c09cac.json", "48131b3c.json", "6430c8c4.json", "d10ecb37.json", "bd4472b8.json", "66f2d22f.json", "780d0b14.json", "f2829549.json", "e133d23d.json", "833dafe3.json", "3c9b0459.json", "6f8cd79b.json", "0d3d703e.json", "1e0a9b12.json", "25d8a9c8.json", "a59b95c0.json", "0c786b71.json", "496994bd.json", "423a55dc.json", "67a3c6ac.json", "d19f7514.json", "506d28a5.json", "4be741c5.json", "b91ae062.json", "a416b8f3.json", "74dd1130.json", "c9e6f938.json", "68b67ca3.json", "9565186b.json", "ac0a08a4.json", "5d2a5c43.json", "d13f3404.json", "4347f46a.json", "88a62173.json", "9172f3a0.json", "5582e5ca.json", "6ea4a07e.json", "68b16354.json", "3428a4f5.json", "5b6cbef5.json", "5bd6f4ac.json", "dae9d2b5.json", "15696249.json", "4c4377d9.json", "31d5ba1a.json"], "not_solved": [], "stop_rlz": {"broken_threshold": 0.08, "max_broken_walks": 50, "max_elapsed_sec": 12, "min_num_walks": 50, "stop_num_full_matches": 1}, "search_conf": ["\"\"\"", "\tThis file contains global numerical constants only!!", "\t----------------------------------------------------", "", "\tWhen moved to Kagglespace, these constants will be replaced in the source code by their values.", "", "\tAll configurable constants must be here and nothing else!!", "\"\"\"", "", "# MoveGen specific", "", "MAX_MOVES_AT_ROOT\t\t= 150", "NUM_MOVES_STP_DISCOUNT\t= 0.75", "", "# nm <- MAX_MOVES_AT_ROOT", "# st <- 1", "", "# while (nm >= 1) {", "# \tcat(sprintf('step: %3i, nm: %3i\\n', st, nm))", "# \tnm <- as.integer(nm*NUM_MOVES_STP_DISCOUNT)", "# \tst <- st + 1", "# }", "", "# step:   1, nm: 150", "# step:   2, nm: 112", "# step:   3, nm:  84", "# step:   4, nm:  63", "# step:   5, nm:  47", "# step:   6, nm:  35", "# step:   7, nm:  26", "# step:   8, nm:  19", "# step:   9, nm:  14", "# step:  10, nm:  10", "# step:  11, nm:   7", "# step:  12, nm:   5", "# step:  13, nm:   3", "# step:  14, nm:   2", "# step:  15, nm:   1", "# >", "", "# Priors, rewards and evals", "", "NUM_TOP_SOLUTIONS\t\t= 3", "", "WEIGHT_PRIOR_BY_FORM\t= 0.4\t\t# prior = (1 - WEIGHT_PRIOR_BY_FORM)*prior + WEIGHT_PRIOR_BY_FORM*prior_by_form[form]", "WEIGHT_MIN_IN_EVAL\t\t= 0.4\t\t# ev = eval[IDX_PIC_REACH_MEAN]*(1 - WEIGHT_MIN_IN_EVAL) + eval[IDX_PIC_REACH_MIN]*WEIGHT_MIN_IN_EVAL", "PRIOR_BOOST_IN_SNIPPET\t= 0.6", "", "# Constants for MCTS walks", "", "ADD_EXP_NOISE_EACH\t\t= 20", "DIRICHLET_ALPHA \t\t= 0.1", "EXPLORATION_FRAC\t\t= 0.15", "", "UCB_C_BASE\t\t\t\t= 19652", "UCB_C_INIT\t\t\t\t= 1.25", "UCB_DISCOUNT\t\t\t= 1.2", "", "REWARD_DISCOUNT\t\t\t= 0.9", "", "# Reward XGBoost", "", "DUMMY_REWARD_INSTEAD\t=  0", "XGB_N_ESTIMATORS\t\t= 25", "XGB_ETA\t\t\t\t\t= .3", "XGB_GAMMA\t\t\t\t=  0", "XGB_MAX_DEPTH\t\t\t=  6", "XGB_MIN_CHILD_WEIGHT\t=  1", "XGB_MAX_DELTA_STEP\t\t=  0", "XGB_SUBSAMPLE\t\t\t=  1", "XGB_REG_LAMBDA\t\t\t=  1", "XGB_REG_ALPHA\t\t\t=  0", "XGB_VERBOSE\t\t\t\t= -1", "", "# Constants for special events in CodeEval", "", "EVAL_FULL_MATCH\t\t\t=  10", "EVAL_WRONG_SHAPE\t\t=  -2", "EVAL_MAX_PIC_SIZE\t\t=  40", "", "# Indices inside a 1x18 numpy array for eval", "", "IDX_PIC_REACH_MIN\t\t=  0", "IDX_PIC_BETTER_MIN\t\t=  1", "IDX_PIC_WORSE_MIN\t\t=  2", "IDX_PAT_REACH_MIN\t\t=  3", "IDX_PAT_BETTER_MIN\t\t=  4", "IDX_PAT_WORSE_MIN\t\t=  5", "", "IDX_PIC_REACH_MEAN\t\t=  6", "IDX_PIC_BETTER_MEAN\t\t=  7", "IDX_PIC_WORSE_MEAN\t\t=  8", "IDX_PAT_REACH_MEAN\t\t=  9", "IDX_PAT_BETTER_MEAN\t\t= 10", "IDX_PAT_WORSE_MEAN\t\t= 11", "", "IDX_PIC_REACH_MAX\t\t= 12", "IDX_PIC_BETTER_MAX\t\t= 13", "IDX_PIC_WORSE_MAX\t\t= 14", "IDX_PAT_REACH_MAX\t\t= 15", "IDX_PAT_BETTER_MAX\t\t= 16", "IDX_PAT_WORSE_MAX\t\t= 17", "", "LENGTH_CODE_EVAL\t\t= 18"], "git_commit_long_hash": "14dedd602ab27b9f3242fab0117f54d5db1243e7"}